% Datatypes
%format Reg = "\AD{Reg}"
%format mu  = "\AD{\ensuremath{\mu}}"
%format NonRec = "\AD{NonRec}"
%format Computed = "\AD{Computed}"
%format Expr = "\AD{Expr}"
%format <ZOp = "\AD{\ensuremath{\_<_{\mathds{Z}}\_}}"
%format <Z   = "\AD{\ensuremath{<_{\mathds{Z}}}}"
%format <Nabla   = "\AD{\ensuremath{<_{\nabla}}}"
%format <NablaOp = "\AD{\ensuremath{\llcorner\_\lrcorner\_<_{\nabla}\_}}"
%format llcorner = "\AD{\ensuremath{\llcorner}}"
%format lrcorner = "\AD{\ensuremath{\lrcorner}}"
%format Zipperup = "\AD{Config\ensuremath{_{\scaleto{\Uparrow}{4pt}}^{\scaleto{G}{4pt}}}}"
%format Zipperdown = "\AD{Config\ensuremath{_{\scaleto{\Downarrow}{4pt}}^{\scaleto{G}{4pt}}}}"
%format IxDissection = "\AD{\ensuremath{\mathcal{D}_x}}"
%format IxLt ="\AD{\ensuremath{\llcorner\_\lrcorner\llcorner\_\lrcorner\_<_{\nabla}\_}}"
%format IxLtdown ="\AD{\ensuremath{\llcorner\_\lrcorner\llcorner\_\lrcorner\_<_{\mathds{Z}_{\scaleto{\Downarrow}{2pt}}}\_}}"
%format lrcornerIxLtdown = "\AD{\ensuremath{\lrcorner\_<_{\mathds{Z}_{\scaleto{\Downarrow}{2pt}}}\_}}"
%format lrcornerllcorner = "\AD{\ensuremath{\lrcorner\llcorner}}"
%format Acc = "\AD{Acc}"

% Constructors
%format Empty = "\AI{()}"
%format One   = "\AI{\ensuremath{\mathbb{1}}}"
%format Zero  = "\AI{\ensuremath{\mathbb{0}}}"
%format I     = "\AI{I}"
%format K     = "\AI{K}"
%format O+Op  = "\AI{\_\ensuremath{\oplus}\_}"
%format O*Op  = "\AI{\_\ensuremath{\otimes}\_}"
%format O+    = "\AI{\ensuremath{\oplus}}"
%format O*    = "\AI{\ensuremath{\otimes}}"
%format In    = "\AI{In}"
%format prodOp = "\AI{\_\text{,}\_}"
%format NonRec-One = "\AI{NonRec-\ensuremath{\mathbb{1}}}"
%format NonRec-K   = "\AI{NonRec-K}"
%format NonRec-+1  = "\AI{NonRec-\ensuremath{\oplus_1}}"
%format NonRec-+2  = "\AI{NonRec-\ensuremath{\oplus_2}}"
%format NonRec-*  = "\AI{NonRec-\ensuremath{\otimes}}"
%format _,_,_ = "\AI{\_,\_,\_}"
%format Base = "\AI{Base}"
%format Step = "\AI{Step}"
%format step-+1  = "\AI{step-\ensuremath{\oplus_1}}"
%format step-+2  = "\AI{step-\ensuremath{\oplus_2}}"
%format step-*1  = "\AI{step-\ensuremath{\otimes_1}}"
%format step-*2  = "\AI{step-\ensuremath{\otimes_2}}"
%format base-*  = "\AI{base-\ensuremath{\otimes}}"
%format acc = "\AI{acc}"

%format NonRec-+2  = "\AI{NonRec-\ensuremath{\oplus_2}}"
%format NonRec-*  = "\AI{NonRec-\ensuremath{\otimes}}"

% Functions and definitions
%format U            = "\AF{U}"
%format el           = "\AF{el}"
%format expr         = "\AF{exprF}"
%format interp  = "\AF{\ensuremath{\llbracket\_\rrbracket}}"
%format interpl = "\AF{\ensuremath{\llbracket}}"
%format interpr = "\AF{\ensuremath{\rrbracket}}"
%format fmap    = "\AF{fmap}"
%format cata         = "\AF{cata}"
%format catamorphism         = "\AF{cata}"
%format cataN        = "\nonterm{" (cata "}"
%format mapFold      = "\AF{map-fold}"
%format eval         = "\AF{eval}"
%format plusOp  = "\AI{\_\ensuremath{+}\_}"
%format nabla        = "\AF{\ensuremath{\nabla}}"
%format plug         = "\AF{plug}"
%format plug-muup      = "\AF{plug-\ensuremath{\mu_{\Uparrow}}}"
%format plug-mudown    = "\AF{plug-\ensuremath{\mu_{\Downarrow}}}"
%format plugC-mudown    = "\AF{plugZ-\ensuremath{\mu_{\Downarrow}}}"
%format coerce = "\AF{coerce}"
%format Leaf   = "\AF{Leaf}"
%format Stack  = "\AF{Stack\ensuremath{^{\scaleto{G}{4pt}}}}"
%format Zipper = "\AF{Config\ensuremath{^{\scaleto{G}{4pt}}}}"
%format first-cps = "\AF{first-cps}"
%format load = "\AF{load\ensuremath{^{\scaleto{G}{4pt}}}}"
%format unload = "\AF{unload\ensuremath{^{\scaleto{G}{4pt}}}}"
%format unload-correct = "\AF{unload\ensuremath{^{\scaleto{G}{4pt}}}-correct}"
%format correctness = "\AF{correctness\ensuremath{^{\scaleto{G}{4pt}}}}"
%format step = "\AF{step\ensuremath{^{\scaleto{G}{4pt}}}}"
%format unload-preserves = "\AF{unload-plug\ensuremath{_{\Uparrow}^{\scaleto{G}{4pt}}}}"
%format cont   = "\AF{cont}"
%format cong   = "\AF{cong}"
%format cont'   = "\AF{cont''}"
%format right   = "\AF{right}"
%format compute = "\AF{compute}"
%format Dissection = "\AF{\ensuremath{\mathcal{D}}}"
%format plugD         = "\AF{plug\DJ}"
%format Well-founded  = "\AF{Well-founded}"
%format IxLtdown-WF ="\AF{\ensuremath{\llcorner\_\lrcorner\llcorner\_\lrcorner\_<_{\mathds{Z}_{\scaleto{\Downarrow}{2pt}}}\_}-WF}"
%format tail-rec-cata  = "\AF{tail\text{-}rec\text{-}cata}"
%format rec  = "\AF{rec}"
%format step-<  = "\AF{step\ensuremath{^{\scaleto{G}{4pt}}}\text{-}<}"
%format unload-<  = "\AF{unload\ensuremath{^{\scaleto{G}{4pt}}}\text{-}<}"
%format right-<  = "\AF{right-<}"
%format Zipperup-to-Zipperdown = "\AF{Config\ensuremath{_{\Uparrow}^{\scaleto{G}{4pt}}}-to-Config\ensuremath{_{\Downarrow}^{\scaleto{G}{4pt}}}}"
%format bot-elim = "\AF{\ensuremath{\bot}-elim}"


% Bound variables
%format A   = "\AB{A}"
%format P   = "\AB{P}"
%format Is   = "\AB{Is}"
%format X   = "\AB{X}"
%format Y   = "\AB{Y}"
%format R   = "\AB{R}"
%format Q   = "\AB{Q}"
%format x   = "\AB{x}"
%format y   = "\AB{y}"
%format f   = "\AB{f}"
%format rr   = "\AB{rr}"
%format rs   = "\AB{rs}"
%format rx   = "\AB{rx}"
%format eq'  = "\AB{eq''}"
%format r   = "\AB{r}"
%format q   = "\AB{q}"
%format dq   = "\AB{dq}"
%format dr   = "\AB{dr}"
%format r'   = "\AB{r''}"
%format q'   = "\AB{q''}"
%format dq'   = "\AB{dq''}"
%format d   = "\AB{d}"
%format dr'   = "\AB{dr''}"
%format alg = "\AB{\ensuremath{\psi}}"
%format eta = "\AB{\ensuremath{\eta}}"
%format l   = "\AB{l}"
%format isl   = "\AB{isl}"
%format l'   = "\AB{l''}"
%format isl'   = "\AB{isl''}"
%format h1   = "\AB{\ensuremath{h_1}}"
%format h   = "\AB{\ensuremath{h}}"
%format hs   = "\AB{\ensuremath{hs}}"
%format h2   = "\AB{\ensuremath{h_2}}"
%format tx   = "\AB{\ensuremath{t_x}}"
%format t1   = "\AB{\ensuremath{t_1}}"
%format t2   = "\AB{\ensuremath{t_2}}"
%format z1   = "\AB{\ensuremath{z_1}}"
%format z2   = "\AB{\ensuremath{z_2}}"
%format s1   = "\AB{\ensuremath{s_1}}"
%format s2   = "\AB{\ensuremath{s_2}}"
%format e1   = "\AB{\ensuremath{e_1}}"
%format e2   = "\AB{\ensuremath{e_2}}"
%format isl'   = "\AB{isl''}"
%format tx   = "\AB{t\ensuremath{_{x}}}"
%format t   = "\AB{t}"
%format t'   = "\AB{t''}"
%format z   = "\AB{z}"

% Record fields
%format Tree  = "\AL{Tree}"
%format Value = "\AL{Value}"
%format Proof = "\AL{Proof}"
%format Computed.Tree = "\AL{Computed.Tree}"

