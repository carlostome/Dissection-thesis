@inproceedings{dissection,
 author = {McBride, Conor},
 title = {Clowns to the Left of Me, Jokers to the Right (Pearl): Dissecting Data Structures},
 booktitle = {Proceedings of the 35th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '08},
 year = {2008},
 isbn = {978-1-59593-689-9},
 location = {San Francisco, California, USA},
 pages = {287--295},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1328438.1328474},
 doi = {10.1145/1328438.1328474},
 acmid = {1328474},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype, differentiation, dissection, division, generic programming, iteration, polynomial, stack, tail recursion, traversal, zipper},
}



@phdthesis{norell,
  title={Towards a practical programming language based on dependent type theory},
  author={Norell, Ulf},
  school={Chalmers University of Technology},
  year=2007
}

@article{huet,
  title={The zipper},
  author={Huet, G{\'e}rard},
  journal={Journal of functional programming},
  volume={7},
  number={5},
  pages={549--554},
  year={1997},
  publisher={Cambridge University Press}
}

@inproceedings{norell-notes,
  title={Dependently typed programming in Agda},
  author={Norell, Ulf},
  booktitle={International School on Advanced Functional Programming},
  pages={230--266},
  year={2008},
  organization={Springer}
}

@incollection{altenkirch-mcbride,
  title={Generic programming within dependently typed programming},
  author={Altenkirch, Thorsten and McBride, Conor},
  booktitle={Generic Programming},
  pages={1--20},
  year={2003},
  publisher={Springer}
}

@book{martin-loef,
  title={Intuitionistic type theory},
  author={Martin-L{\"o}f, Per},
  volume={9},
  year={1984},
  publisher={Bibliopolis Napoli}
}


@inproceedings{morris-regular,
  author = "Peter Morris and Thorsten Altenkirch and Conor McBride",
  title = "Exploring the Regular Tree Types",
  booktitle = "Types for Proofs and Programs ({TYPES} 2004)",
  editor = "Jean-Christophe Filliatre, Christine Paulin-Mohring and Benjamin Werner",
  series = "Lecture Notes in Computer Science",
  year = 2006
}

@inproceedings{noort-regular,
 author = {Noort, Thomas van and Rodriguez, Alexey and Holdermans, Stefan and Jeuring, Johan and Heeren, Bastiaan},
 title = {A Lightweight Approach to Datatype-generic Rewriting},
 booktitle = {Proceedings of the ACM SIGPLAN Workshop on Generic Programming},
 series = {WGP '08},
 year = {2008},
 isbn = {978-1-60558-060-9},
 location = {Victoria, BC, Canada},
 pages = {13--24},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1411318.1411321},
 doi = {10.1145/1411318.1411321},
 acmid = {1411321},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, term rewriting},
} 

@article{indexed-containers,
  title={Indexed containers},
  author={Altenkirch, Thorsten and Ghani, Neil and Hancock, Peter and McBride, Conor and Morris, Peter},
  journal={Journal of Functional Programming},
  volume={25},
  year={2015},
  publisher={Cambridge University Press}
}

@article{containers,
  title={Containers: constructing strictly positive types},
  author={Abbott, Michael and Altenkirch, Thorsten and Ghani, Neil},
  journal={Theoretical Computer Science},
  volume={342},
  number={1},
  pages={3--27},
  year={2005},
  publisher={Elsevier}
}

@inproceedings{levitation,
 author = {Chapman, James and Dagand, Pierre-\'{E}variste and McBride, Conor and Morris, Peter},
 title = {The Gentle Art of Levitation},
 booktitle = {Proceedings of the 15th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '10},
 year = {2010},
 isbn = {978-1-60558-794-3},
 location = {Baltimore, Maryland, USA},
 pages = {3--14},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1863543.1863547},
 doi = {10.1145/1863543.1863547},
 acmid = {1863547},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data structure, metaprogramming, monads, proof assistants, type systems},
} 


@inproceedings{danvy-I,
 author = {Ager, Mads Sig and Biernacki, Dariusz and Danvy, Olivier and Midtgaard, Jan},
 title = {A Functional Correspondence Between Evaluators and Abstract Machines},
 booktitle = {Proceedings of the 5th ACM SIGPLAN International Conference on Principles and Practice of Declaritive Programming},
 series = {PPDP '03},
 year = {2003},
 isbn = {1-58113-705-2},
 location = {Uppsala, Sweden},
 pages = {8--19},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/888251.888254},
 doi = {10.1145/888251.888254},
 acmid = {888254},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract machines, closure conversion, defunctionalization, interpreters, transformation into continuation-passing style (CPS)},
} 

@Inbook{danvy-II,
author="Danvy, Olivier",
editor="Koopman, Pieter
and Plasmeijer, Rinus
and Swierstra, Doaitse",
title="From Reduction-Based to Reduction-Free Normalization",
bookTitle="Advanced Functional Programming: 6th International School, AFP 2008, Heijen, The Netherlands, May 2008, Revised Lectures",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="66--164",
isbn="978-3-642-04652-0",
doi="10.1007/978-3-642-04652-0_3",
url="https://doi.org/10.1007/978-3-642-04652-0_3"
}

@inproceedings{krivine,
  author    = {Wouter Swierstra},
  title     = {From Mathematics to Abstract Machine: {A} formal derivation of an
               executable Krivine machine},
  booktitle = {Proceedings Fourth Workshop on Mathematically Structured Functional
               Programming, MSFP@ETAPS 2012, Tallinn, Estonia, 25 March 2012.},
  pages     = {163--177},
  year      = {2012},
  crossref  = {DBLP:journals/corr/abs-1202-2407},
  url       = {https://doi.org/10.4204/EPTCS.76.10},
  doi       = {10.4204/EPTCS.76.10},
  timestamp = {Wed, 03 May 2017 14:47:54 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1202-2924},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{power-of-pi,
 author = {Oury, Nicolas and Swierstra, Wouter},
 title = {The Power of Pi},
 booktitle = {Proceedings of the 13th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '08},
 year = {2008},
 isbn = {978-1-59593-919-7},
 location = {Victoria, BC, Canada},
 pages = {39--50},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1411204.1411213},
 doi = {10.1145/1411204.1411213},
 acmid = {1411213},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependent types, domain-specific embedded languages},
} 

@article{landin,
  title={The mechanical evaluation of expressions},
  author={Landin, Peter J},
  journal={The Computer Journal},
  volume={6},
  number={4},
  pages={308--320},
  year={1964},
  publisher={The British Computer Society}
}


@Article{dybjer-inductive,
author="Dybjer, Peter",
title="Inductive families",
journal="Formal Aspects of Computing",
year="1994",
month="Jul",
day="01",
volume="6",
number="4",
pages="440--465",
abstract="A general formulation of inductive and recursive definitions in Martin-L{\"o}f's type theory is presented. It extends Backhouse's `Do-It-Yourself Type Theory' to include inductive definitions of families of sets and definitions of functions by recursion on the way elements of such sets are generated. The formulation is in natural deduction and is intended to be a natural generalisation to type theory of Martin-L{\"o}f's theory of iterated inductive definitions in predicate logic.",
issn="1433-299X",
doi="10.1007/BF01211308",
url="https://doi.org/10.1007/BF01211308"
}

@InProceedings{induction-recursion,
author="Dybjer, Peter
and Setzer, Anton",
editor="Girard, Jean-Yves",
title="A Finite Axiomatization of Inductive-Recursive Definitions",
booktitle="Typed Lambda Calculi and Applications",
year="1999",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="129--146",
abstract="Induction-recursion is a schema which formalizes the principles for introducing new sets in Martin-L{\"o}f 's type theory. It states that we may inductively define a set while simultaneously defining a function from this set into an arbitrary type by structural recursion. This extends the notion of an inductively defined set substantially and allows us to introduce universes and higher order universes (but not a Mahlo universe). In this article we give a finite axiomatization of inductive-recursive definitions. We prove consistency by constructing a set-theoretic model which makes use of one Mahlo cardinal.",
isbn="978-3-540-48959-7"
}


@inproceedings{nested,
  title={Nested datatypes},
  author={Bird, Richard and Meertens, Lambert},
  booktitle={International Conference on Mathematics of Program Construction},
  pages={52--67},
  year={1998},
  organization={Springer}
}

 [download]

@inproceedings{mutual,
 author = {Yakushev, Alexey Rodriguez and Holdermans, Stefan and L\"{o}h, Andres and Jeuring, Johan},
 title = {Generic Programming with Fixed Points for Mutually Recursive Datatypes},
 booktitle = {Proceedings of the 14th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '09},
 year = {2009},
 isbn = {978-1-60558-332-7},
 location = {Edinburgh, Scotland},
 pages = {233--244},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1596550.1596585},
 doi = {10.1145/1596550.1596585},
 acmid = {1596585},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, fixed points, haskell, mutually recursive datatypes},
} 


@InCollection{morris,
  author = 	 {Thorsten Altenkirch and Conor Mcbride and Peter Morris},
  title = 	 {Generic Programming with Dependent Types},
  booktitle = 	 {Spring School on Datatype-Generic Programming},
  OPTpages = 	 {},
  publisher = {Springer-Verlag},
  year =	 {2007},
  editor = {Roland Backhouse and Jeremy Gibbons and Ralf Hinze and Johan Jeuring},
  volume =	 {4719},
  series =	 {LNCS},
}

@inproceedings{partiality,
 author = {Danielsson, Nils Anders},
 title = {Operational Semantics Using the Partiality Monad},
 booktitle = {Proceedings of the 17th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '12},
 year = {2012},
 isbn = {978-1-4503-1054-3},
 location = {Copenhagen, Denmark},
 pages = {127--138},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2364527.2364546},
 doi = {10.1145/2364527.2364546},
 acmid = {2364546},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependent types, mixed induction and coinduction, partiality monad},
} 


@inproceedings{nakata,
  title={Trace-based coinductive operational semantics for while},
  author={Nakata, Keiko and Uustalu, Tarmo},
  booktitle={International Conference on Theorem Proving in Higher Order Logics},
  pages={375--390},
  year={2009},
  organization={Springer}
}


@article{bove,
  title={Modelling general recursion in type theory},
  author={Bove, Ana and Capretta, Venanzio},
  journal={Mathematical Structures in Computer Science},
  volume={15},
  number={4},
  pages={671--708},
  year={2005},
  publisher={Cambridge University Press}
}
